SOMNOS is a register based assembly processor.
The registers are numbered r0-r31.

My goals are to have a processor capable of efficient
multithreading and scheduling

Instructions:
LI - Load Immediate
ex:
	LI r2 #35

Loads the number 35 into register r2

MOV - Move
ex:
	MOV r6 r17

Copies the value in register r6 to register r17

ADD - Add (duh)
ex:
	ADD 3 4 8

Adds the values in registers 3 and 4 and stores
the result in register 8

SUB - Subtract
ex:
	SUB r2 r4 r3

Subtracts the value in register r2 from the value
in register r4 and stores the result in register r3

MUL - Multiply
ex:
	MUL r1 r2 r3

Multiplies the values in registers r1 and r2 and
stores the result in register r3

DIV - Divide
ex:
	DIV r3 r8 r4

Divides the value in register r3 by the value in
register r8 and stores the result in register r4

LR - Load Register
ex:
	LR r2 r4

Loads the value stored in memory at the address in r4
into register r2

SR - Store Register
ex:
	SR r3 r1

Stores the value in register r3 to memory at the 
address in register r1

PRINT - Print to Terminal
ex:
	PRINT r2

Prints the value stored in register r2 to the screen

LAB - Label
ex:
	LAB MYROUTINE

Creates a label at that point that branching/jumping
commands may reference.

BEQ - Branch when equal
ex:
	BEQ r2 r6 LOOPTOP

If the values in registers r2 and r6 are equal, jump
to the LOOPTOP label

BNE - Branch when not equal
ex:
	BNE r1 r2 END

If the values in registers r1 and r2 are not equal
jump to the END label

BGT - Branch greater than
ex:
	BGT r5 r2 SOMEWHERE

If the value in register r5 is greater than the value
in register r2, jump to the label SOMEWHERE

BLT - Branch less than
ex:
	BLT r5 r2 SOMEWHERE

If the value in register r5 is less than the value
in register r2, jump to the label SOMEWHERE

HALT - Halt
ex:
	HALT

When this command is executed, the process stops all execution.
