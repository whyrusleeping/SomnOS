SOMNOS is a register based assembly processor.
The registers are numbered 0-31.

My goals are to have a processor capable of efficient
multithreading and scheduling

Instructions:
LI - Load Immediate
ex:
	LI 2 35

Loads the number 35 into register 2

MOV - Move
ex:
	MOV 6 17

Copies the value in register 6 to register 17

ADD - Add (duh)
ex:
	ADD 3 4 8

Adds the values in registers 3 and 4 and stores
the result in register 8

SUB - Subtract
ex:
	SUB 2 4 3

Subtracts the value in register 2 from the value
in register 4 and stores the result in register 3

MUL - Multiply
ex:
	MUL 1 2 3

Multiplies the values in registers 1 and 2 and
stores the result in register 3

DIV - Divide
ex:
	DIV 3 8 4

Divides the value in register 3 by the value in
register 8 and stores the result in register 4

LR - Load Register
ex:
	LR 2 4

Loads the value stored in memory at the address in 4
into register 2

SR - Store Register
ex:
	SR 3 1

Stores the value in register 3 to memory at the 
address in register 1

PRINT - Print to Terminal
ex:
	PRINT 2

Prints the value stored in register 2 to the screen

LAB - Label
ex:
	LAB MYROUTINE

Creates a label at that point that branching/jumping
commands may reference.

BEQ - Branch when equal
ex:
	BEQ 2 6 LOOPTOP

If the values in registers 2 and 6 are equal, jump
to the LOOPTOP label

BNE - Branch when not equal
ex:
	BNE 1 2 END

If the values in registers 1 and 2 are not equal
jump to the END label

BGT - Branch greater than
ex:
	BGT 5 2 SOMEWHERE

If the value in register 5 is greater than the value
in register 2, jump to the label SOMEWHERE

BLT - Branch less than
ex:
	BLT 5 2 SOMEWHERE

If the value in register 5 is less than the value
in register 2, jump to the label SOMEWHERE

HALT - Halt
ex:
	HALT

When this command is executed, the process exits
